{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/content.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","console","log","port","chrome","runtime","connect","onMessage","addListener","msg","sender","type","payload","observer","MutationObserver","mutations","forEach","mutation","target","localName","parentElement","className","previousElementSibling","textContent","mutantMatch","addedNodes","node","dts","seconds","now","Date","dtsDiff","Math","abs","withinSeconds","tvDTS","corrected","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","correctTVDTS","cells","innerText","order","text","idxS","search","idxE","length","JSON","parse","slice","e","extractOrder","String","postMessage","alert","rhs","document","getElementsByClassName","observe","attributes","characterData","subtree","childList"],"mappings":"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","file":"content.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","console.log(\"TVExtender Content...setting up comms port to background\");\r\nvar port = chrome.runtime.connect({name: \"TVE-comms-port\"});\r\n\r\n// TradingView gives a datetimestamp in it's alert notifications of the form MMM DD HH:MM\r\n// The JS Date constructor assumes a year of 2001 for some reason, so we need to correct\r\n// for the current year instead. NOTE: this is something of an assumption as it perfectly possible\r\n// that incoming dts was generated in a previous year, however in practice I suspect this is a safe\r\n// enough assumption to make!\r\nfunction correctTVDTS(tvDTS) {\r\n    var corrected = new Date();\r\n    corrected.setDate(tvDTS.getDate());\r\n    corrected.setHours(tvDTS.getHours());\r\n    corrected.setMinutes(tvDTS.getMinutes());\r\n    corrected.setSeconds(tvDTS.getSeconds());\r\n    return corrected;\r\n}\r\n\r\n// Check if the supplied datetimestamp is within a certain number of seconds of 'now'\r\nfunction withinSeconds(dts, seconds) {\r\n    var now = new Date();\r\n    var dtsDiff = Math.abs(now - dts); \r\n    console.log(now);\r\n    console.log(dts);\r\n    console.log(\"DTS Diff: seconds = \" + dtsDiff / 1000);\r\n    // times are in milliseconds\r\n    return (dtsDiff / 1000 >= seconds) ? false : true;\r\n}\r\n\r\n// Extract the TVE order details from a portion of text. TVE order details are bounded by\r\n// TVE: and :EVT with the internals being a string rep of a JSON object\r\nfunction extractOrder(text) {\r\n    var idxS = text.search('TVE:');\r\n    var idxE = text.search(':EVT');\r\n    if(idxS > -1 && idxE > -1 && idxS + 4 < text.length) {\r\n        try {\r\n            var order = JSON.parse(text.slice(idxS + 4, idxE));\r\n            console.log(order);\r\n            return order;\r\n        } catch(e) {\r\n            console.log(\"Error parsing order text: \" + e);\r\n        }\r\n    }\r\n    console.log(\"Could not find TVE:/:EVT bounds in text: \" + text);\r\n    return null;\r\n}\r\n\r\n// returns true if the mutation is one we are interested in...\r\nfunction mutantMatch(mutation) {\r\n    if(mutation.target.localName == 'tbody' \r\n            && mutation.target.parentElement.className == 'alert-list' \r\n            // This is to differentiate from the alert-list used for alert management\r\n            && mutation.target.previousElementSibling.textContent == 'SymbolDescriptionDate/Time') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nport.onMessage.addListener(function(msg, sender) {\r\n    if(msg.type == \"connAck\"){\r\n        console.log(msg.payload);\r\n        console.log(\"Setting up observer...\");\r\n        var observer= new MutationObserver(function(mutations) {\r\n            mutations.forEach(function(mutation) {\r\n                if(mutantMatch(mutation)) {\r\n                    console.log(mutation); // really useful for debugging!\r\n                    mutation.addedNodes.forEach(function(node) {\r\n                        // Ensure alert message was generated within the last 1 minute.\r\n                        // 1 minute is as granular as alert timestamps get and they seem to\r\n                        // be rounded to the nearest minute, this is not foolproof!\r\n                        var alertDTS = new Date(node.cells[2].innerText);\r\n                        if(withinSeconds(correctTVDTS(alertDTS), 60)) {\r\n                            var alertStr = new String(node.cells[1].innerText);\r\n                            var order = extractOrder(alertStr);\r\n                            if(order != null) {\r\n                                // post the order to the background script for further processing\r\n                                port.postMessage({type:\"order\", payload:order});\r\n                            } else {\r\n                                alert(\"Could not extract TVE order from alert, ignoring\");\r\n                            }\r\n                        } else {\r\n                            // NOTE: not alerting this error as there will potentially be a lot of\r\n                            // these stale alerts i.e. when the site is refreshed within the browser\r\n                            // the alert list gets repopulated with all the previous alerts \r\n                            // generated in the session\r\n                            console.log(\"Alert timestamp out of bounds, ignoring\");\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        var rhs = document.getElementsByClassName(\"layout__area--right\")[0];\r\n        var config = {attributes:false, characterData:false, subtree:true, childList:true};\r\n        observer.observe(rhs, config);\r\n    }\r\n});\r\n\r\n"],"sourceRoot":""}